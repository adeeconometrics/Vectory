from __future__ import annotations 
from typing import Union, Optional, Dict

import numpy as np

class RSym: 
    def __init__(self) -> None: ...


def sin(x:RSym) -> RSym: ...
def cos(x:RSym) -> RSym: ...
def tan(x:RSym) -> RSym: ...
def cot(x:RSym) -> RSym: ...
def sec(x:RSym) -> RSym: ...
def csc(x:RSym) -> RSym: ...

def sinh(x:RSym) -> RSym: ...
def cosh(x:RSym) -> RSym: ...
def tanh(x:RSym) -> RSym: ...
def coth(x:RSym) -> RSym: ...
def sech(x:RSym) -> RSym: ...
def csch(x:RSym) -> RSym: ...

def asin(x:RSym) -> RSym: ...
def acos(x:RSym) -> RSym: ...
def atan(x:RSym) -> RSym: ...
def acot(x:RSym) -> RSym: ...
def asec(x:RSym) -> RSym: ...
def acsc(x:RSym) -> RSym: ...

def asinh(x:RSym) -> RSym: ...
def acosh(x:RSym) -> RSym: ...
def atanh(x:RSym) -> RSym: ...
def acoth(x:RSym) -> RSym: ...
def asech(x:RSym) -> RSym: ...
def acsch(x:RSym) -> RSym: ...

def grad(x:RSym) -> Dict: ... 


if __name__ == '__main__':
    ... 